apiVersion: batch/v1
kind: Job
metadata:
  labels:
    release: jenkins-x
  name: jx-boot
  namespace: {{ .Values.boot.namespace }}
spec:
  backoffLimit: 5
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        release: jenkins-x
    spec:
      initContainers:
      {{- if .Values.secrets.env.enabled }}
      - name: init-secrets
        image: jenkinsxio/envsubst:0.0.1
        args:
        - secrets.yaml
        env:
        - name: ADMINUSER_USERNAME
          value: {{ .Values.secrets.adminUser.username | quote }}
        - name: ADMINUSER_PASSWORD
          value: {{ .Values.secrets.adminUser.password | quote }}
        - name: HMACTOKEN
          value: {{ .Values.secrets.hmacToken | quote }}
        - name: PIPELINEUSER_USERNAME
          value: {{ .Values.secrets.pipelineUser.username | quote }}
        - name: PIPELINEUSER_EMAIL
          value: {{ .Values.secrets.pipelineUser.email | quote }}
        - name: PIPELINEUSER_TOKEN
          value: {{ .Values.secrets.pipelineUser.token | quote }}
        volumeMounts:
        - name: config-volume
          mountPath: /workdir/secrets.yaml
          subPath: secrets.yaml
        - name: workdir
          mountPath: "/processed"
      {{- end }}
      {{- if .Values.secrets.helmboot.enabled }}
      - name: init-secrets
        image: gcr.io/jenkinsxio-labs/jxl:0.0.45
        command:
        - /bin/sh
        args:
        - -c
        - "jxl boot secrets export --git-url {{ .Values.boot.bootGitURL }} -f /processed/secrets.yaml"
        volumeMounts:
        - name: workdir
          mountPath: "/processed"
      {{- end }}
      {{- if .Values.secrets.gsm.enabled }}
      - name: init-secrets
        image: gcr.io/jenkinsxio-labs/jxl:0.0.45
        command:
        - /bin/sh
        args:
        - -c
        - "gcloud beta secrets versions access latest --secret={{ .Values.boot.clusterName }}-boot-secret > /processed/secrets.yaml -q" # pragma: allowlist secret
        volumeMounts:
        - name: workdir
          mountPath: "/processed"
      {{- end }}

      containers:
      - args:
        - boot
        - run
        - -b
        - --job
        - --git-url
        - {{ .Values.boot.bootGitURL | quote }}
        - --git-ref
        - {{ .Values.boot.bootGitRef | quote }}
        - --versions-repo
        - {{ .Values.boot.versionsGitURL | quote }}
        - --versions-ref
        - {{ .Values.boot.versionsGitRef | quote }}
        command:
        - jxl

        env:
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JX_BATCH_MODE
          value: "true"
        - name: JX_LOG_FORMAT
          value: "json"

        - name: JX_HELM3
          value: "true"
        - name: JX_HELMFILE
          value: "true"
        - name: JX_SECRETS_DIR
          value: /secrets/secrets.yaml
        - name: JX_SECRETS_YAML
          value: /secrets/secrets.yaml
        - name: JX_INTERPRET_PIPELINE
          value: "true"
        - name: JX_REQUIREMENT_TERRAFORM
          value: "true"
        - name: JX_REQUIREMENT_ENV_GIT_OWNER
          value: "{{ .Values.boot.environmentGitOwner }}"
        - name: JX_REQUIREMENT_KANIKO_SA_NAME
          value: kaniko-sa

        - name: JX_REQUIREMENT_VELERO_SA_NAME
          value: velero-sa
        - name: JX_REQUIREMENT_EXTERNALDNS_SA_NAME
          value: externaldns-sa
        - name: JX_REQUIREMENT_INGRESS_TLS_PRODUCTION
          value: {{ .Values.boot.tls.production | quote }}
        - name: JX_REQUIREMENT_ENV_GIT_PUBLIC
          value: {{ .Values.boot.publicEnvironmentGit | quote }}
        - name: JX_REQUIREMENT_GIT_PUBLIC
          value: {{ .Values.boot.publicGit | quote }}
        - name: JX_REQUIREMENT_STORAGE_BACKUP_ENABLED
          value: "true"
        - name: JX_REQUIREMENT_PROVIDER
          value:  {{ .Values.boot.provider | quote }}
        - name: JX_REQUIREMENT_PROJECT
          value:  {{ .Values.boot.projectID | quote }}
        - name: JX_REQUIREMENT_CLUSTER_NAME
          value: {{ .Values.boot.clusterName | quote }}
        - name: JX_REQUIREMENT_ZONE
          value: {{ .Values.boot.zone | quote }}
        # - name: JX_REQUIREMENT_STORAGE_BACKUP_URL
        #   value: ${storage_backup_url}
        # - name: JX_REQUIREMENT_STORAGE_LOGS_ENABLED
        #   value: "true"
        # - name: JX_REQUIREMENT_STORAGE_LOGS_URL
        #   value: ${storage_logs_url}
        # - name: JX_REQUIREMENT_STORAGE_REPORTS_ENABLED
        #   value: "false"
        # - name: JX_REQUIREMENT_STORAGE_REPOSITORY_ENABLED
        #   value: "false"
        - name: USER_EMAIL
          value: {{ .Values.boot.userEmail | quote }}
        - name: JX_HOME
          value: /secrets
        image: gcr.io/jenkinsxio-labs/jxl:0.0.45
        imagePullPolicy: IfNotPresent
        name: boot
        volumeMounts:
          - name: workdir
            mountPath: "/secrets"
      restartPolicy: Never
      serviceAccount: boot-sa
      volumes:
      - name: workdir
        emptyDir: {}
      {{- if .Values.secrets.env.enabled }}
      - name: config-volume
        configMap:
          name: boot-secrets-template
      {{- end }}